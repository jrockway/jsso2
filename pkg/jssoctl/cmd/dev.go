package cmd

import (
	"encoding/base64"
	"fmt"

	"github.com/jrockway/jsso2/pkg/tokens"
	"github.com/spf13/cobra"
	"google.golang.org/protobuf/encoding/protojson"
)

var (
	devCmd = &cobra.Command{
		Use:   "dev",
		Short: "Tools for developers of JSSO",
	}

	decryptTokenCmd = &cobra.Command{
		Use:   "decrypt-token [base64-key|key] [token]",
		Short: "Decrypt a paseto token generated by the tokens package.",
		Args:  cobra.ExactArgs(2),
		RunE: func(cmd *cobra.Command, args []string) error {
			var key []byte
			if len(args[0]) == 32 {
				key = []byte(args[0])
			} else {
				raw, err := base64.StdEncoding.DecodeString(args[0])
				if err != nil {
					return err
				}
				key = raw
			}
			msg, err := tokens.Decrypt(args[1], key)
			if err != nil {
				return err
			}
			fmt.Fprintln(cmd.OutOrStdout(), protojson.Format(msg))
			return nil
		},
	}
)

func init() {
	devCmd.AddCommand(decryptTokenCmd)
}
